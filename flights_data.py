# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1csdtjS-4RcWmR_TYwGlNR8bSPjcWPWnQ
"""

import requests
from bs4 import BeautifulSoup
import numpy as np
import pandas as pd

table = []
flights = ['6E171','6E5335','6E993','6E167','6E179','6E181','6E5339','6E223','6E957','6E189','6E755','6E191','6E129','6E843','6E197','6E185','6E665','6E155','I5314','I5716','I5332','I5482','AI349','AI887','AI665','AI678','AI865','AI315','AI317','AI636','AI102','AI441','AI24','AI624','AI805','AI191','AI863','G82501','G8338','G8530','G8334','G8336','G8640','G8446','G8429','G8544','SG8287','SG8153','SG8701','SG8723','SG8911','SG8161','SG8709','SG8169','SG8715','SG8159','UK975','UK923','UK943','UK963','UK927','UK995','UK945','UK993','UK941','UK955','UK977','UK985','UK953','UK981','UK967','6E2625','6E2135','6E2562','6E2132','6E2228','6E5032','6E5022','6E2032','6E2988','6E2783','6E2808','6E2716','6E2305','6E2289','6E2484','I52878','I5737','I5741','I5722','AI804','AI505','AI501','AI503','AI87','AI173','AI802','G8116','G8117','G8120','G8118','SG8906','SG136','SG192','SG198','SG8720','UK110','UK812','UK816','UK820','UK814','UK818','6E456','6E5322','6E5324','6E424','6E734','6E346','6E414','6E361','6E5331','6E6449','6E5348','6E6794','6E849','I5303','I5304','I5306','I5334','AI640','AI604','AI507','AI608','AI610','G8418','G8395','G8320','G8526','SG456','SG438','SG6351','UK858','UK846','UK852','UK864','UK854','UK850','UK866']

for mm in range(11,13):
    for dd in range(1,32):
      for flight in flights: 
        url = "https://airportinfo.live/flight/"+flight+"?d=2019-"+str(mm)+"-"+str(dd)
        req = requests.get(url)
        webp = req.text
        soup = BeautifulSoup(webp, 'html.parser')
        airline =(soup.find("span", "bold flightAirline")).text
        flight_number =(soup.find("span", "flightNumber")).text
        #duration =(soup.find("span", "duration bold ")).text
        distance =(soup.find("span", "duration_distance")).text
        distance = distance.split()[3] 
        from_city =(soup.find("span", "bold from_city")).text
        to_city =(soup.find("span", "bold to_city")).text
        times = soup.findAll("div","important_time")
        times_text = [t.text for t in times]
        date = url[-10:]
        new_date = date.split('-')
        year = new_date[0][-4:]
        month = new_date[1]
        day = new_date[2]
        row = []
        row.append(airline)
        row.append(flight_number)
        row.append(from_city)
        row.append(to_city)
        row.append(distance)
        #row.append(duration)
        row.append(day)
        row.append(month)
        row.append(year)
        row = row + times_text
        table.append(row)

for dd in range(1,32):
      for flight in flights: 
        url = "https://airportinfo.live/flight/"+flight+"?d=2020-1"+"-"+str(dd)
        req = requests.get(url)
        webp = req.text
        soup = BeautifulSoup(webp, 'html.parser')
        airline =(soup.find("span", "bold flightAirline")).text
        flight_number =(soup.find("span", "flightNumber")).text
        #duration =(soup.find("span", "duration bold ")).text
        distance =(soup.find("span", "duration_distance")).text
        distance = distance.split()[3] 
        from_city =(soup.find("span", "bold from_city")).text
        to_city =(soup.find("span", "bold to_city")).text
        times = soup.findAll("div","important_time")
        times_text = [t.text for t in times]
        date = url[-10:]
        new_date = date.split('-')
        year = new_date[0][-4:]
        month = new_date[1]
        day = new_date[2]
        row = []
        row.append(airline)
        row.append(flight_number)
        row.append(from_city)
        row.append(to_city)
        row.append(distance)
        #row.append(duration)
        row.append(day)
        row.append(month)
        row.append(year)
        row = row + times_text
        table.append(row)

tab_arr = np.array(table)

data = pd.DataFrame(tab_arr, columns = ['Airline','Flight Number','Origin Airport','Destination Airport','Distance(Km)','DD','MM','YY','Scheduled Departure','Scheduled Arrival','Actual Departure','Actual Arrival'])
data.to_csv('flight_data.csv', index=False, encoding='utf-8')
#data

